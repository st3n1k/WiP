// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WiP.Infrastructure.Data.Context;

#nullable disable

namespace WiP.Infrastructure.Data.Migrations
{
    [DbContext(typeof(WiPContext))]
    [Migration("20231114172434_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WiP.Core.Entity.DeveloperEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Developers");
                });

            modelBuilder.Entity("WiP.Core.Entity.EngineEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("Release")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("EngineEntity");
                });

            modelBuilder.Entity("WiP.Core.Entity.GameDeveloperEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("DeveloperId")
                        .HasColumnType("int");

                    b.Property<int?>("GameId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeveloperId");

                    b.HasIndex("GameId");

                    b.ToTable("GameDeveloperEntity");
                });

            modelBuilder.Entity("WiP.Core.Entity.GameEngineEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("EngineId")
                        .HasColumnType("int");

                    b.Property<string>("Version")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("EngineId");

                    b.ToTable("GameEngineEntity");
                });

            modelBuilder.Entity("WiP.Core.Entity.GameEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<byte[]>("Cover")
                        .HasColumnType("longblob");

                    b.Property<string>("CoverUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int?>("GameEngineId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Metascore")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime?>("Release")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("SeriesId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("GameEngineId");

                    b.HasIndex("SeriesId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("WiP.Core.Entity.GameGenreEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("GameId")
                        .HasColumnType("int");

                    b.Property<int?>("GenreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("GenreId");

                    b.ToTable("GameGenreEntity");
                });

            modelBuilder.Entity("WiP.Core.Entity.GamePlatformEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("GameId")
                        .HasColumnType("int");

                    b.Property<int?>("PlatformId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("PlatformId");

                    b.ToTable("GamePlatformEntity");
                });

            modelBuilder.Entity("WiP.Core.Entity.GamePublisherEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("GameId")
                        .HasColumnType("int");

                    b.Property<int?>("PublisherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("PublisherId");

                    b.ToTable("GamePublisherEntity");
                });

            modelBuilder.Entity("WiP.Core.Entity.GenreEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("WiP.Core.Entity.PlatformEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("Release")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("PlatformEntity");
                });

            modelBuilder.Entity("WiP.Core.Entity.PublisherEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Publishers");
                });

            modelBuilder.Entity("WiP.Core.Entity.SeriesEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("SeriesEntity");
                });

            modelBuilder.Entity("WiP.Core.Entity.GameDeveloperEntity", b =>
                {
                    b.HasOne("WiP.Core.Entity.DeveloperEntity", "Developer")
                        .WithMany("GameDevelopers")
                        .HasForeignKey("DeveloperId");

                    b.HasOne("WiP.Core.Entity.GameEntity", "Game")
                        .WithMany("GameDevelopers")
                        .HasForeignKey("GameId");

                    b.Navigation("Developer");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("WiP.Core.Entity.GameEngineEntity", b =>
                {
                    b.HasOne("WiP.Core.Entity.EngineEntity", "Engine")
                        .WithMany()
                        .HasForeignKey("EngineId");

                    b.Navigation("Engine");
                });

            modelBuilder.Entity("WiP.Core.Entity.GameEntity", b =>
                {
                    b.HasOne("WiP.Core.Entity.GameEngineEntity", "GameEngine")
                        .WithMany()
                        .HasForeignKey("GameEngineId");

                    b.HasOne("WiP.Core.Entity.SeriesEntity", "Series")
                        .WithMany()
                        .HasForeignKey("SeriesId");

                    b.Navigation("GameEngine");

                    b.Navigation("Series");
                });

            modelBuilder.Entity("WiP.Core.Entity.GameGenreEntity", b =>
                {
                    b.HasOne("WiP.Core.Entity.GameEntity", "Game")
                        .WithMany("GameGenres")
                        .HasForeignKey("GameId");

                    b.HasOne("WiP.Core.Entity.GenreEntity", "Genre")
                        .WithMany("GameGenres")
                        .HasForeignKey("GenreId");

                    b.Navigation("Game");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("WiP.Core.Entity.GamePlatformEntity", b =>
                {
                    b.HasOne("WiP.Core.Entity.GameEntity", "Game")
                        .WithMany("GamePlatforms")
                        .HasForeignKey("GameId");

                    b.HasOne("WiP.Core.Entity.PlatformEntity", "Platform")
                        .WithMany("GamePlatforms")
                        .HasForeignKey("PlatformId");

                    b.Navigation("Game");

                    b.Navigation("Platform");
                });

            modelBuilder.Entity("WiP.Core.Entity.GamePublisherEntity", b =>
                {
                    b.HasOne("WiP.Core.Entity.GameEntity", "Game")
                        .WithMany("GamePublishers")
                        .HasForeignKey("GameId");

                    b.HasOne("WiP.Core.Entity.PublisherEntity", "Publisher")
                        .WithMany("GamePublishers")
                        .HasForeignKey("PublisherId");

                    b.Navigation("Game");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("WiP.Core.Entity.DeveloperEntity", b =>
                {
                    b.Navigation("GameDevelopers");
                });

            modelBuilder.Entity("WiP.Core.Entity.GameEntity", b =>
                {
                    b.Navigation("GameDevelopers");

                    b.Navigation("GameGenres");

                    b.Navigation("GamePlatforms");

                    b.Navigation("GamePublishers");
                });

            modelBuilder.Entity("WiP.Core.Entity.GenreEntity", b =>
                {
                    b.Navigation("GameGenres");
                });

            modelBuilder.Entity("WiP.Core.Entity.PlatformEntity", b =>
                {
                    b.Navigation("GamePlatforms");
                });

            modelBuilder.Entity("WiP.Core.Entity.PublisherEntity", b =>
                {
                    b.Navigation("GamePublishers");
                });
#pragma warning restore 612, 618
        }
    }
}
